name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin 796973493835.dkr.ecr.us-east-1.amazonaws.com

    - name: Build and push Docker image to ECR
      run: |
        docker build -t 796973493835.dkr.ecr.us-east-1.amazonaws.com/ml-scoring-api:latest .
        docker push 796973493835.dkr.ecr.us-east-1.amazonaws.com/ml-scoring-api:latest

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.AWS_PRIVATE_KEY }}
        script: |
          # Login to Amazon ECR
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | sudo docker login --username AWS --password-stdin 796973493835.dkr.ecr.us-east-1.amazonaws.com

          # Pull the latest Docker image from ECR
          sudo docker pull 796973493835.dkr.ecr.us-east-1.amazonaws.com/ml-scoring-api:latest

          # Stop any running containers
          sudo docker stop $(sudo docker ps -q) || true

          # Run the new container
          sudo docker run -d -p 80:8888 796973493835.dkr.ecr.us-east-1.amazonaws.com/ml-scoring-api:latest
